{"ast":null,"code":"var _jsxFileName = \"/Users/omstudent/Desktop/lab4/src/App.js\";\nimport React, { Component } from \"react\";\nimport randomColor from \"randomcolor\";\nimport Counter from \"./Counter\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initState = () => {\n      var timer = setInterval(() => {\n        if (this.state.count <= 0) {\n          console.log('yeet');\n          clearInterval(timer);\n        }\n\n        const newCount = this.state.count - 1;\n        this.setState({\n          count: newCount,\n          loading: false\n        });\n      }, 1);\n    };\n\n    this.updateCount = () => this.setState({\n      count: this.state.count + 1,\n      color: randomColor()\n    });\n\n    this.updateMountStatus = () => {\n      this.setState({\n        isMounted: !this.state.isMounted\n      });\n    };\n\n    this.clearParentState = () => {\n      this.setState({\n        count: 0,\n        loading: true,\n        color: \"#FA6304\"\n      });\n    };\n\n    console.log(\"constructor() invoked\");\n    this.state = {\n      count: 900,\n      loading: true,\n      color: \"#FA6304\",\n      isMounted: true\n    };\n    console.log(\"state set\");\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // console.log(\"getDerivedStateFromProps() invoked\");\n    return null;\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    // console.log(\"getSnapshotBeforeUpdate() invoked\");\n    return null;\n  }\n\n  componentDidUpdate(prevProps, nextProps) {// console.log(\"componentDidUpdate() called\");\n  }\n\n  render() {\n    // console.log(\"render has been executed!\");\n    return this.state.isMounted ? React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Counter, Object.assign({\n      initState: this.initState,\n      updateCount: this.updateCount,\n      clearParentState: this.clearParentState\n    }, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.updateMountStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Unmount Component\")) : React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.updateMountStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Mount Component\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/omstudent/Desktop/lab4/src/App.js"],"names":["React","Component","randomColor","Counter","App","constructor","props","initState","timer","setInterval","state","count","console","log","clearInterval","newCount","setState","loading","updateCount","color","updateMountStatus","isMounted","clearParentState","getDerivedStateFromProps","getSnapshotBeforeUpdate","prevProps","prevState","componentDidUpdate","nextProps","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkBnBC,SAlBmB,GAkBP,MAAM;AAChB,UAAIC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC5B,YAAI,KAAKC,KAAL,CAAWC,KAAX,IAAoB,CAAxB,EAA2B;AACzBC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAC,UAAAA,aAAa,CAACN,KAAD,CAAb;AACD;;AACD,cAAMO,QAAQ,GAAG,KAAKL,KAAL,CAAWC,KAAX,GAAmB,CAApC;AACA,aAAKK,QAAL,CAAc;AACZL,UAAAA,KAAK,EAAEI,QADK;AAEZE,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OAVsB,EAUpB,CAVoB,CAAvB;AAWD,KA9BkB;;AAAA,SAyCnBC,WAzCmB,GAyCL,MACZ,KAAKF,QAAL,CAAc;AACZL,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB,CADd;AAEZQ,MAAAA,KAAK,EAAEjB,WAAW;AAFN,KAAd,CA1CiB;;AAAA,SA+CnBkB,iBA/CmB,GA+CC,MAAM;AACxB,WAAKJ,QAAL,CAAc;AACZK,QAAAA,SAAS,EAAE,CAAC,KAAKX,KAAL,CAAWW;AADX,OAAd;AAGD,KAnDkB;;AAAA,SAqDnBC,gBArDmB,GAqDA,MAAM;AACvB,WAAKN,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,CADK;AAEZM,QAAAA,OAAO,EAAE,IAFG;AAGZE,QAAAA,KAAK,EAAE;AAHK,OAAd;AAKD,KA3DkB;;AAEjBP,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEA,SAAKH,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,GADI;AAEXM,MAAAA,OAAO,EAAE,IAFE;AAGXE,MAAAA,KAAK,EAAE,SAHI;AAIXE,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMAT,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAED,SAAOU,wBAAP,CAAgCjB,KAAhC,EAAuCI,KAAvC,EAA8C;AAC5C;AACA,WAAO,IAAP;AACD;;AAgBDc,EAAAA,uBAAuB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC5C;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,kBAAkB,CAACF,SAAD,EAAYG,SAAZ,EAAuB,CACvC;AACD;;AAsBDC,EAAAA,MAAM,GAAG;AACP;AACA,WAAO,KAAKnB,KAAL,CAAWW,SAAX,GACL;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAE,KAAKd,SADlB;AAEE,MAAA,WAAW,EAAE,KAAKW,WAFpB;AAGE,MAAA,gBAAgB,EAAE,KAAKI;AAHzB,OAIM,KAAKZ,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,EAOE;AAAQ,MAAA,OAAO,EAAE,KAAKU,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,CADK,GAaL;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKA,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAbF;AAmBD;;AAnFyB;;AAsF5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport randomColor from \"randomcolor\";\nimport Counter from \"./Counter\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"constructor() invoked\");\n\n    this.state = {\n      count: 900,\n      loading: true,\n      color: \"#FA6304\",\n      isMounted: true\n    };\n    console.log(\"state set\");\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // console.log(\"getDerivedStateFromProps() invoked\");\n    return null;\n  }\n\n  initState = () => {\n    var timer = setInterval(() => {\n      if (this.state.count <= 0) {\n        console.log('yeet');\n        clearInterval(timer);\n      }\n      const newCount = this.state.count - 1;\n      this.setState({\n        count: newCount,\n        loading: false\n      });\n    }, 1);\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    // console.log(\"getSnapshotBeforeUpdate() invoked\");\n    return null;\n  }\n\n  componentDidUpdate(prevProps, nextProps) {\n    // console.log(\"componentDidUpdate() called\");\n  }\n\n  updateCount = () =>\n    this.setState({\n      count: this.state.count + 1,\n      color: randomColor()\n    });\n\n  updateMountStatus = () => {\n    this.setState({\n      isMounted: !this.state.isMounted\n    });\n  };\n\n  clearParentState = () => {\n    this.setState({\n      count: 0,\n      loading: true,\n      color: \"#FA6304\"\n    });\n  };\n\n  render() {\n    // console.log(\"render has been executed!\");\n    return this.state.isMounted ? (\n      <div className=\"App\">\n        <Counter\n          initState={this.initState}\n          updateCount={this.updateCount}\n          clearParentState={this.clearParentState}\n          {...this.state}\n        />\n        <button onClick={this.updateMountStatus}>\n          Unmount Component\n        </button>\n      </div>\n    ) : (\n      <div className=\"App\">\n        <button onClick={this.updateMountStatus}>\n          Mount Component\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}